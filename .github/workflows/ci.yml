name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  
jobs:
  # Quality checks and testing
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript type checking
        run: npm run type-check
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check Prettier formatting
        run: npm run format:check
        
      - name: Run deployment readiness check
        run: npm run deploy-check

  # Build test
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SITE_URL: https://fuelfoodscpg.com
          NEXT_PUBLIC_SITE_NAME: "FuelFoods CPG"
          NEXT_PUBLIC_IMAGES_BASE_URL: https://fuelfoodscpg.com
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            out/
          retention-days: 1

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Check for known vulnerabilities
        run: npm audit --audit-level=high --production

  # Deployment preview (only on PRs)
  deployment-preview:
    name: Deployment Preview
    runs-on: ubuntu-latest
    needs: [quality-checks, build-test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for preview
        run: npm run build
        env:
          NEXT_PUBLIC_SITE_URL: https://preview-fuelfoodscpg.vercel.app
          NEXT_PUBLIC_SITE_NAME: "FuelFoods CPG (Preview)"
          NEXT_PUBLIC_IMAGES_BASE_URL: https://preview-fuelfoodscpg.vercel.app
          
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Deployment Preview Ready**
              
              âœ… All quality checks passed
              âœ… Build completed successfully
              
              **Deploy this PR:**
              - [Deploy to Vercel](https://vercel.com/new/clone?repository-url=https://github.com/${context.repo.owner}/${context.repo.repo}/tree/${context.payload.pull_request.head.ref})
              - [Deploy to Netlify](https://app.netlify.com/start/deploy?repository=https://github.com/${context.repo.owner}/${context.repo.repo}&base=main)
              
              **Key Changes:**
              - âœ… TypeScript type checking: PASSED
              - âœ… ESLint linting: PASSED  
              - âœ… Prettier formatting: PASSED
              - âœ… Deployment readiness: PASSED
              - âœ… Security audit: PASSED
              `
            })

  # Production deployment (only on main branch)
  deploy-production:
    name: Production Deployment
    runs-on: ubuntu-latest
    needs: [quality-checks, build-test, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for production
        run: npm run build
        env:
          NEXT_PUBLIC_SITE_URL: https://fuelfoodscpg.com
          NEXT_PUBLIC_SITE_NAME: "FuelFoods CPG"
          NEXT_PUBLIC_IMAGES_BASE_URL: https://fuelfoodscpg.com
          NEXT_TELEMETRY_DISABLED: 1
          
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        if: success()
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
      # Alternative: Deploy to Netlify
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v2.1
      #   if: success()
      #   with:
      #     publish-dir: '.next'
      #     production-branch: main
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy-message: "Deploy from GitHub Actions"
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Lighthouse performance audit (optional)
  lighthouse-audit:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: [quality-checks, build-test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Wait for deployment
        run: sleep 30
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: '.lighthouserc.json'
          temporaryPublicStorage: true
          uploadArtifacts: true