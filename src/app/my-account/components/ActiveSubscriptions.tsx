'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\n\ninterface Subscription {\n  id: string;\n  planType: string;\n  status: string;\n  nextDeliveryDate: Date | null;\n  cancelAtPeriodEnd: boolean;\n  recurringAmount: number;\n}\n\ninterface ActiveSubscriptionsProps {\n  subscriptions: Subscription[];\n  detailed?: boolean;\n}\n\nconst getPlanDisplayName = (planType: string) => {\n  switch (planType.toLowerCase()) {\n    case 'pro':\n      return 'Pro Plan (3-Pack)';\n    case 'elite':\n      return 'Elite Plan (5-Pack)';\n    case 'starter':\n    default:\n      return 'Starter Plan';\n  }\n};\n\nconst getPlanColor = (planType: string) => {\n  switch (planType.toLowerCase()) {\n    case 'pro':\n      return 'bg-blue-50 border-blue-200';\n    case 'elite':\n      return 'bg-purple-50 border-purple-200';\n    case 'starter':\n    default:\n      return 'bg-fuelfoods-green-50 border-fuelfoods-green-200';\n  }\n};\n\nconst formatDeliveryDate = (date: Date | null) => {\n  if (!date) return 'Not scheduled';\n  \n  return new Intl.DateTimeFormat('en-US', {\n    weekday: 'long',\n    month: 'short',\n    day: 'numeric',\n  }).format(new Date(date));\n};\n\nconst SubscriptionCard = ({ \n  subscription, \n  detailed = false \n}: { \n  subscription: Subscription; \n  detailed?: boolean; \n}) => {\n  const planDisplayName = getPlanDisplayName(subscription.planType);\n  const colorClasses = getPlanColor(subscription.planType);\n  \n  return (\n    <div className={`p-4 rounded-lg border ${colorClasses}`}>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-2\">\n            <h3 className=\"font-medium text-gray-900\">\n              {planDisplayName} - Weekly\n            </h3>\n            {subscription.cancelAtPeriodEnd && (\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                Ending\n              </span>\n            )}\n          </div>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            Next delivery: {formatDeliveryDate(subscription.nextDeliveryDate)}\n          </p>\n          <p className=\"text-sm font-medium text-fuelfoods-green-600 mt-1\">\n            ${subscription.recurringAmount}/week\n          </p>\n          \n          {detailed && (\n            <div className=\"mt-3 space-y-2\">\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <span className=\"font-medium\">Status:</span>\n                <span className=\"ml-2 capitalize\">{subscription.status}</span>\n              </div>\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <span className=\"font-medium\">Frequency:</span>\n                <span className=\"ml-2\">Weekly</span>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 ml-4\">\n          <button className=\"px-3 py-1 text-sm bg-white text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\">\n            {detailed ? 'Edit' : 'Modify'}\n          </button>\n          \n          {subscription.cancelAtPeriodEnd ? (\n            <button className=\"px-3 py-1 text-sm text-fuelfoods-green-600 hover:text-fuelfoods-green-800 transition-colors\">\n              Reactivate\n            </button>\n          ) : (\n            <button className=\"px-3 py-1 text-sm text-red-600 hover:text-red-800 transition-colors\">\n              {detailed ? 'Cancel' : 'Pause'}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function ActiveSubscriptions({ subscriptions, detailed = false }: ActiveSubscriptionsProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            Active Subscriptions\n          </h2>\n          {subscriptions.length > 0 && (\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-fuelfoods-green-100 text-fuelfoods-green-800\">\n              {subscriptions.length} active\n            </span>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {subscriptions.length > 0 ? (\n          <>\n            <div className=\"space-y-4\">\n              {subscriptions.map((subscription) => (\n                <SubscriptionCard\n                  key={subscription.id}\n                  subscription={subscription}\n                  detailed={detailed}\n                />\n              ))}\n            </div>\n\n            {!detailed && (\n              <div className=\"mt-6\">\n                <Link\n                  href=\"/configure/starter\"\n                  className=\"inline-flex items-center text-fuelfoods-green-600 hover:text-fuelfoods-green-700 font-medium transition-colors\"\n                >\n                  <svg\n                    className=\"w-5 h-5 mr-2\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                    />\n                  </svg>\n                  Add New Subscription\n                </Link>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"text-center py-8\">\n            <svg\n              className=\"mx-auto h-12 w-12 text-gray-400\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No active subscriptions</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Start a subscription to get fresh microgreens delivered weekly.\n            </p>\n            <div className=\"mt-6\">\n              <Link\n                href=\"/configure/pro\"\n                className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-lg text-white bg-fuelfoods-green-600 hover:bg-fuelfoods-green-700 transition-colors\"\n              >\n                <svg\n                  className=\"w-5 h-5 mr-2\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                  />\n                </svg>\n                Start Your First Subscription\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}